{"id":"../node_modules/probe.gl/dist/esm/index.js","dependencies":[{"name":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/lm0-chan/react-play/gita_labs/package.json","includedInParent":true,"mtime":1550874673728},{"name":"/home/lm0-chan/react-play/gita_labs/.babelrc","includedInParent":true,"mtime":1550824957232},{"name":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/package.json","includedInParent":true,"mtime":1550874675876},{"name":"./init","loc":{"line":1,"column":7},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/init.js"},{"name":"./lib/utils/globals","loc":{"line":2,"column":24},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/lib/utils/globals.js"},{"name":"./env/globals","loc":{"line":3,"column":65},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/env/globals.js"},{"name":"./env/is-browser","loc":{"line":4,"column":58},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/env/is-browser.js"},{"name":"./env/get-browser","loc":{"line":5,"column":48},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/env/get-browser.js"},{"name":"./env/is-electron","loc":{"line":6,"column":38},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/env/is-electron.js"},{"name":"./env/assert","loc":{"line":7,"column":34},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/env/assert.js"},{"name":"./lib/stats","loc":{"line":8,"column":33},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/lib/stats.js"},{"name":"./lib/log","loc":{"line":11,"column":31},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/lib/log.js"},{"name":"./lib/utils/color","loc":{"line":10,"column":22},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/lib/utils/color.js"},{"name":"./lib/utils/log-to-dom","loc":{"line":15,"column":54},"parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/lib/utils/log-to-dom.js"},{"name":"process","parent":"/home/lm0-chan/react-play/gita_labs/node_modules/probe.gl/dist/esm/index.js","resolved":"/home/lm0-chan/react-play/gita_labs/node_modules/process/browser.js"}],"generated":{"js":"var global = arguments[3];\nvar process = require(\"process\");\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"VERSION\", {\n  enumerable: true,\n  get: function () {\n    return _globals.VERSION;\n  }\n});\nObject.defineProperty(exports, \"self\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.self;\n  }\n});\nObject.defineProperty(exports, \"window\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.window;\n  }\n});\nObject.defineProperty(exports, \"global\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.global;\n  }\n});\nObject.defineProperty(exports, \"document\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.document;\n  }\n});\nObject.defineProperty(exports, \"process\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.process;\n  }\n});\nObject.defineProperty(exports, \"console\", {\n  enumerable: true,\n  get: function () {\n    return _globals2.console;\n  }\n});\nObject.defineProperty(exports, \"isBrowser\", {\n  enumerable: true,\n  get: function () {\n    return _isBrowser.default;\n  }\n});\nObject.defineProperty(exports, \"isBrowserMainThread\", {\n  enumerable: true,\n  get: function () {\n    return _isBrowser.isBrowserMainThread;\n  }\n});\nObject.defineProperty(exports, \"getBrowser\", {\n  enumerable: true,\n  get: function () {\n    return _getBrowser.default;\n  }\n});\nObject.defineProperty(exports, \"isMobile\", {\n  enumerable: true,\n  get: function () {\n    return _getBrowser.isMobile;\n  }\n});\nObject.defineProperty(exports, \"isElectron\", {\n  enumerable: true,\n  get: function () {\n    return _isElectron.default;\n  }\n});\nObject.defineProperty(exports, \"assert\", {\n  enumerable: true,\n  get: function () {\n    return _assert.default;\n  }\n});\nObject.defineProperty(exports, \"Stats\", {\n  enumerable: true,\n  get: function () {\n    return _stats.default;\n  }\n});\nObject.defineProperty(exports, \"Log\", {\n  enumerable: true,\n  get: function () {\n    return _log.default;\n  }\n});\nObject.defineProperty(exports, \"COLOR\", {\n  enumerable: true,\n  get: function () {\n    return _color.COLOR;\n  }\n});\nObject.defineProperty(exports, \"_enableDOMLogging\", {\n  enumerable: true,\n  get: function () {\n    return _logToDom.enableDOMLogging;\n  }\n});\nexports.default = void 0;\n\nrequire(\"./init\");\n\nvar _globals = require(\"./lib/utils/globals\");\n\nvar _globals2 = require(\"./env/globals\");\n\nvar _isBrowser = _interopRequireWildcard(require(\"./env/is-browser\"));\n\nvar _getBrowser = _interopRequireWildcard(require(\"./env/get-browser\"));\n\nvar _isElectron = _interopRequireDefault(require(\"./env/is-electron\"));\n\nvar _assert = _interopRequireDefault(require(\"./env/assert\"));\n\nvar _stats = _interopRequireDefault(require(\"./lib/stats\"));\n\nvar _log = _interopRequireDefault(require(\"./lib/log\"));\n\nvar _color = require(\"./lib/utils/color\");\n\nvar _logToDom = require(\"./lib/utils/log-to-dom\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar _default = new _log.default({\n  id: 'probe.gl'\n});\n\nexports.default = _default;","map":{"mappings":[{"source":"../../src/index.js","name":null,"original":{"line":1,"column":0},"generated":{"line":112,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":3,"column":0},"generated":{"line":114,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":6,"column":0},"generated":{"line":116,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":7,"column":0},"generated":{"line":118,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":8,"column":0},"generated":{"line":120,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":9,"column":0},"generated":{"line":122,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":12,"column":0},"generated":{"line":124,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":15,"column":0},"generated":{"line":126,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":18,"column":0},"generated":{"line":128,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":19,"column":0},"generated":{"line":130,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":27,"column":0},"generated":{"line":132,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":15},"generated":{"line":138,"column":15}},{"source":"../../src/index.js","name":"Log","original":{"line":23,"column":19},"generated":{"line":138,"column":19}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":15},"generated":{"line":138,"column":31}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":23},"generated":{"line":138,"column":32}},{"source":"../../src/index.js","name":"id","original":{"line":23,"column":24},"generated":{"line":139,"column":0}},{"source":"../../src/index.js","name":"id","original":{"line":23,"column":24},"generated":{"line":139,"column":2}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":26},"generated":{"line":139,"column":4}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":28},"generated":{"line":139,"column":6}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":23},"generated":{"line":140,"column":0}},{"source":"../../src/index.js","name":null,"original":{"line":23,"column":15},"generated":{"line":140,"column":1}}],"sources":{"../../src/index.js":"import './init';\n\nexport {VERSION} from './lib/utils/globals';\n\n// ENVIRONMENT\nexport {self, window, global, document, process, console} from './env/globals';\nexport {default as isBrowser, isBrowserMainThread} from './env/is-browser';\nexport {default as getBrowser, isMobile} from './env/get-browser';\nexport {default as isElectron} from './env/is-electron';\n\n// ENVIRONMENT'S ASSERT IS 5-15KB, SO WE PROVIDE OUR OWN\nexport {default as assert} from './env/assert';\n\n// STATS (PERFORMANCE PROFILING)\nexport {default as Stats} from './lib/stats';\n\n// LOGGING\nexport {default as Log} from './lib/log';\nexport {COLOR} from './lib/utils/color';\n\n// DEFAULT EXPORT IS A LOG INSTANCE\nimport {default as Log} from './lib/log';\nexport default new Log({id: 'probe.gl'});\n\n// EXPERIMENTAL EXPORTS\n// DOM LOGGING\nexport {enableDOMLogging as _enableDOMLogging} from './lib/utils/log-to-dom';\n"},"lineCount":null}},"hash":"1ba15aa84131aa2515d59e7c7a9330c3","cacheData":{"env":{}}}
{"id":"../node_modules/react-alice-carousel/lib/utils/swipe.js","dependencies":[{"name":"/home/vim/Documents/ashvattha/react_origins/package.json","includedInParent":true,"mtime":1553135033701},{"name":"/home/vim/Documents/ashvattha/react_origins/.babelrc","includedInParent":true,"mtime":1553110911506},{"name":"/home/vim/Documents/ashvattha/react_origins/node_modules/react-alice-carousel/package.json","includedInParent":true,"mtime":1553134248432}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isVerticalTouchMoveDetected = function isVerticalTouchMoveDetected(e, deltaX, deltaY) {\n  var gap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n\n  var vertical = Math.abs(deltaY);\n  var horizontal = Math.abs(deltaX);\n  return vertical > horizontal && horizontal < gap;\n};\n\nvar getSwipeDirection = function getSwipeDirection(deltaX) {\n  return deltaX > 0 ? 'LEFT' : 'RIGHT';\n};\n\nexports.isVerticalTouchMoveDetected = isVerticalTouchMoveDetected;\nexports.getSwipeDirection = getSwipeDirection;","map":{"mappings":[{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-alice-carousel/lib/utils/swipe.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/react-alice-carousel/lib/utils/swipe.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isVerticalTouchMoveDetected = function isVerticalTouchMoveDetected(e, deltaX, deltaY) {\n  var gap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n\n  var vertical = Math.abs(deltaY);\n  var horizontal = Math.abs(deltaX);\n  return vertical > horizontal && horizontal < gap;\n};\n\nvar getSwipeDirection = function getSwipeDirection(deltaX) {\n  return deltaX > 0 ? 'LEFT' : 'RIGHT';\n};\n\nexports.isVerticalTouchMoveDetected = isVerticalTouchMoveDetected;\nexports.getSwipeDirection = getSwipeDirection;"},"lineCount":19}},"hash":"f2f0cbdd0c7971d39620a09aaf5e52ad","cacheData":{"env":{}}}